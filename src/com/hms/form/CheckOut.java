/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hms.form;

import com.hms.database.ConnectionDatabase;
import com.hms.query.Query;
import java.awt.HeadlessException;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 * @author Mahadi Indra <indra-182 on github.com>
 */
public class CheckOut extends javax.swing.JFrame {

    /**
     * Creates new form CheckOut
     */
    public CheckOut() {
        initComponents();
        txtSetName.setEditable(false);
        txtSetCheckInDate.setEditable(false);
        txtSetCheckOutDate.setEditable(false);
        txtSetIdCard.setEditable(false);
        txtSetDuration.setEditable(false);
        txtSetTotalPrice.setEditable(false);
    }

    int id = 0;
    String query;
    String roomType;
    String bed;
    String roomNumber;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCariKamar = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDataTransactions = new javax.swing.JTable();
        txtSetName = new javax.swing.JTextField();
        txtSetCheckInDate = new javax.swing.JTextField();
        txtSetCheckOutDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtSetIdCard = new javax.swing.JTextField();
        txtSetDuration = new javax.swing.JTextField();
        txtSetTotalPrice = new javax.swing.JTextField();
        btnCheckOut = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel1.setText("Cari Kamar");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 110, -1, -1));

        txtCariKamar.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        txtCariKamar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariKamarActionPerformed(evt);
            }
        });
        getContentPane().add(txtCariKamar, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 110, 350, -1));

        btnCari.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        getContentPane().add(btnCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 110, -1, -1));

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel2.setText("Nama Tamu");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, -1, -1));

        jLabel3.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel3.setText("Tanggal Check In");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 240, -1, -1));

        jLabel4.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel4.setText("Tanggal Check Out");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 240, -1, -1));

        tableDataTransactions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Transaction", "Phone Number", "Nationality", "Gender", "Email", "Address", "Bed Type", "Room Type", "Price"
            }
        ));
        jScrollPane1.setViewportView(tableDataTransactions);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 550, 1511, -1));

        txtSetName.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        getContentPane().add(txtSetName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 300, -1));

        txtSetCheckInDate.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        getContentPane().add(txtSetCheckInDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 290, 300, -1));

        txtSetCheckOutDate.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        getContentPane().add(txtSetCheckOutDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 290, 300, -1));

        jLabel5.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel5.setText("Nomor Kartu Identitas");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 350, -1, -1));

        jLabel6.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel6.setText("Durasi (Hari)");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 350, -1, -1));

        jLabel7.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel7.setText("Total Biaya");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 350, -1, -1));

        txtSetIdCard.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        getContentPane().add(txtSetIdCard, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 400, 300, -1));

        txtSetDuration.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        getContentPane().add(txtSetDuration, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 400, 300, -1));

        txtSetTotalPrice.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        txtSetTotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSetTotalPriceActionPerformed(evt);
            }
        });
        getContentPane().add(txtSetTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 400, 300, -1));

        btnCheckOut.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        btnCheckOut.setText("Check Out Kamar");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });
        getContentPane().add(btnCheckOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(1400, 290, -1, -1));

        btnClear.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 400, 127, -1));

        btnBack.setFont(new java.awt.Font("Rockwell", 1, 12)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hms/images/logout.jpg"))); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hms/images/mainbg.jpg"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCariKamarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariKamarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariKamarActionPerformed

    private void txtSetTotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSetTotalPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSetTotalPriceActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        ResultSet rs = Query.getData("SELECT * FROM transactions WHERE check_out_date IS NULL");
        DefaultTableModel model = (DefaultTableModel) tableDataTransactions.getModel();
        try {
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("id"), rs.getString("phone_number"), rs.getString("nationality"), rs.getString("gender"), rs.getString("email"), rs.getString("address"), rs.getString("bed"), rs.getString("room_type"), rs.getString("price"), rs.getString("duration_days")});
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        roomNumber = txtCariKamar.getText();
        try {
            ResultSet rs = Query.getData("SELECT * FROM transactions WHERE room_number = '" + roomNumber + "' AND check_out_date IS NULL");
            if (rs.next()) {
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
                Calendar calendar = Calendar.getInstance();

                id = rs.getInt("id");
                txtSetName.setText(rs.getString("name"));
                txtSetCheckInDate.setText(rs.getString("check_in_date"));
                txtSetCheckOutDate.setText(dateFormat.format(calendar.getTime()));
                txtSetIdCard.setText(rs.getString("id_card"));

                // Format the price as IDR
                float price = Float.parseFloat(rs.getString("price"));
                DecimalFormatSymbols symbols = new DecimalFormatSymbols(Locale.getDefault());
                symbols.setDecimalSeparator(',');
                symbols.setGroupingSeparator('.');
                DecimalFormat currencyFormat = new DecimalFormat("###,###.##", symbols);
                txtSetTotalPrice.setText(currencyFormat.format(price));

                String dateBeforeString = rs.getString("check_in_date");
                String dateAfterString = dateFormat.format(calendar.getTime());
                Date dateCheckIn = dateFormat.parse(dateBeforeString);
                Date dateCheckOut = dateFormat.parse(dateAfterString);
                long diff = dateCheckOut.getTime() - dateCheckIn.getTime();
                int diffDays = (int) (diff / (24 * 60 * 60 * 1000));
                if (diffDays == 0) {
                    diffDays = 1;
                    txtSetDuration.setText(String.valueOf(diffDays));
                    txtSetTotalPrice.setText(currencyFormat.format(diffDays * price));
                } else {
                    JOptionPane.showMessageDialog(null, "Room not available");
                }
            }
        } catch (HeadlessException | NumberFormatException | SQLException | ParseException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new CheckOut().setVisible(true);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        // TODO add your handling code here:
        String checkOutDate = txtSetCheckOutDate.getText();
        String duration = txtSetDuration.getText();
        String totalPrice = txtSetTotalPrice.getText();
        String queryCheckOut = "UPDATE transactions SET check_out_date = '" + checkOutDate + "', duration_days = '" + duration + "', total_price = '" + totalPrice + "' WHERE id = '" + id + "'";
        Query.setData(queryCheckOut, "CheckOut Success");
        String queryUpdateRoom = "UPDATE rooms SET status = 'Available' WHERE room_number = '" + roomNumber + "'";
        Query.setData(queryUpdateRoom, "Update Room Success");

        int choose = JOptionPane.showConfirmDialog(null, "Do you want to print bill?", "Print Bill", JOptionPane.YES_NO_OPTION);
        if (choose == 0) {
            printBills();
            setVisible(false);
            new CheckOut().setVisible(true);
        } else {
            setVisible(false);
            new CheckOut().setVisible(true);
        }
    }//GEN-LAST:event_btnCheckOutActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new AdminHome().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void printBills() {
        try {
            File file = new File("src/com/hms/report/BillsDetail.jasper");
            JasperPrint print = JasperFillManager.fillReport(file.getPath(), null, ConnectionDatabase.connect());
            JasperViewer.viewReport(print, false);
        } catch (JRException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnClear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableDataTransactions;
    private javax.swing.JTextField txtCariKamar;
    private javax.swing.JTextField txtSetCheckInDate;
    private javax.swing.JTextField txtSetCheckOutDate;
    private javax.swing.JTextField txtSetDuration;
    private javax.swing.JTextField txtSetIdCard;
    private javax.swing.JTextField txtSetName;
    private javax.swing.JTextField txtSetTotalPrice;
    // End of variables declaration//GEN-END:variables
}
